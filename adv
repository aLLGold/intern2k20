[1mdiff --git a/appTwo/__init__.py b/appTwo/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/appTwo/__init__.pyc b/appTwo/__init__.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..ff82f4c[m
Binary files /dev/null and b/appTwo/__init__.pyc differ
[1mdiff --git a/appTwo/__pycache__/__init__.cpython-37.pyc b/appTwo/__pycache__/__init__.cpython-37.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..7d6f148[m
Binary files /dev/null and b/appTwo/__pycache__/__init__.cpython-37.pyc differ
[1mdiff --git a/appTwo/__pycache__/admin.cpython-37.pyc b/appTwo/__pycache__/admin.cpython-37.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..6593114[m
Binary files /dev/null and b/appTwo/__pycache__/admin.cpython-37.pyc differ
[1mdiff --git a/appTwo/__pycache__/models.cpython-37.pyc b/appTwo/__pycache__/models.cpython-37.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..d3139a5[m
Binary files /dev/null and b/appTwo/__pycache__/models.cpython-37.pyc differ
[1mdiff --git a/appTwo/__pycache__/url.cpython-37.pyc b/appTwo/__pycache__/url.cpython-37.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..2ddb36f[m
Binary files /dev/null and b/appTwo/__pycache__/url.cpython-37.pyc differ
[1mdiff --git a/appTwo/__pycache__/urls.cpython-37.pyc b/appTwo/__pycache__/urls.cpython-37.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..f82ded6[m
Binary files /dev/null and b/appTwo/__pycache__/urls.cpython-37.pyc differ
[1mdiff --git a/appTwo/__pycache__/views.cpython-37.pyc b/appTwo/__pycache__/views.cpython-37.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..b37121b[m
Binary files /dev/null and b/appTwo/__pycache__/views.cpython-37.pyc differ
[1mdiff --git a/appTwo/admin.py b/appTwo/admin.py[m
[1mnew file mode 100644[m
[1mindex 0000000..dde51d2[m
[1m--- /dev/null[m
[1m+++ b/appTwo/admin.py[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32mfrom django.contrib import admin[m
[32m+[m[32mfrom appTwo.models import User[m
[32m+[m[32m# Register your models here.[m
[32m+[m[32madmin.site.register(User)[m
\ No newline at end of file[m
[1mdiff --git a/appTwo/admin.pyc b/appTwo/admin.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..c69cbcf[m
Binary files /dev/null and b/appTwo/admin.pyc differ
[1mdiff --git a/appTwo/apps.py b/appTwo/apps.py[m
[1mnew file mode 100644[m
[1mindex 0000000..890db82[m
[1m--- /dev/null[m
[1m+++ b/appTwo/apps.py[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32mfrom django.apps import AppConfig[m
[32m+[m
[32m+[m
[32m+[m[32mclass ApptwoConfig(AppConfig):[m
[32m+[m[32m    name = 'appTwo'[m
[1mdiff --git a/appTwo/migrations/0001_initial.py b/appTwo/migrations/0001_initial.py[m
[1mnew file mode 100644[m
[1mindex 0000000..0576740[m
[1m--- /dev/null[m
[1m+++ b/appTwo/migrations/0001_initial.py[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32m# Generated by Django 3.0.5 on 2020-04-30 08:34[m
[32m+[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    initial = True[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='User',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('firs_name', models.CharField(max_length=264, unique=True)),[m
[32m+[m[32m                ('last_name', models.CharField(max_length=264, unique=True)),[m
[32m+[m[32m                ('email', models.CharField(max_length=264, unique=True)),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/appTwo/migrations/__init__.py b/appTwo/migrations/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/appTwo/migrations/__pycache__/0001_initial.cpython-37.pyc b/appTwo/migrations/__pycache__/0001_initial.cpython-37.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..24e8c27[m
Binary files /dev/null and b/appTwo/migrations/__pycache__/0001_initial.cpython-37.pyc differ
[1mdiff --git a/appTwo/migrations/__pycache__/__init__.cpython-37.pyc b/appTwo/migrations/__pycache__/__init__.cpython-37.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..a2c0e7c[m
Binary files /dev/null and b/appTwo/migrations/__pycache__/__init__.cpython-37.pyc differ
[1mdiff --git a/appTwo/models.py b/appTwo/models.py[m
[1mnew file mode 100644[m
[1mindex 0000000..44e0da3[m
[1m--- /dev/null[m
[1m+++ b/appTwo/models.py[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32mfrom django.db import models[m
[32m+[m
[32m+[m[32m# Create your models here.[m
[32m+[m
[32m+[m
[32m+[m[32mclass User(models.Model):[m
[32m+[m[32m    firs_name = models.CharField(max_length=264, unique=True)[m
[32m+[m[32m    last_name = models.CharField(max_length=264, unique=True)[m
[32m+[m[32m    email = models.EmailField(max_length=264, unique=True)[m
[1mdiff --git a/appTwo/models.pyc b/appTwo/models.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..edb67f2[m
Binary files /dev/null and b/appTwo/models.pyc differ
[1mdiff --git a/appTwo/static/css/mystyle.css b/appTwo/static/css/mystyle.css[m
[1mnew file mode 100644[m
[1mindex 0000000..5a937c0[m
[1m--- /dev/null[m
[1m+++ b/appTwo/static/css/mystyle.css[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m.jamba{[m
[32m+[m	[32mcolor: aqua;[m
[32m+[m	[32mbackground-color: green[m[41m	[m
[32m+[m[32m}[m
[32m+[m[32mtable,th{[m
[32m+[m	[32mborder:4px solid blue;[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/appTwo/templates/appTwo/index.html b/appTwo/templates/appTwo/index.html[m
[1mnew file mode 100644[m
[1mindex 0000000..638e079[m
[1m--- /dev/null[m
[1m+++ b/appTwo/templates/appTwo/index.html[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m	[32m<title>Excercise</title>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m	[32m<h1>Working</h1>[m
[32m+[m	[32m{{users}}[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
\ No newline at end of file[m
[1mdiff --git a/appTwo/templates/appTwo/user.html b/appTwo/templates/appTwo/user.html[m
[1mnew file mode 100644[m
[1mindex 0000000..57812fd[m
[1m--- /dev/null[m
[1m+++ b/appTwo/templates/appTwo/user.html[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m{% load static %}[m
[32m+[m[32m<html>[m
[32m+[m[32m<head>[m
[32m+[m	[32m<title>Django Review</title>[m
[32m+[m	[32m<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">[m
[32m+[m	[32m<link rel="stylesheet" type="text/css" href="{% static 'css/mystyle.css' %}">   <!-- zugeer bichiv -->[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m	[32m<div class="container" class="center">[m
[32m+[m	[32m<div class="jumbotron" >[m
[32m+[m		[32m{% if users %}[m
[32m+[m		[32m<table>[m
[32m+[m			[32m<thead>[m
[32m+[m				[32m<td>First Name</td>[m
[32m+[m				[32m<td>Last Name</td>[m
[32m+[m				[32m<td>Email</td>[m
[32m+[m			[32m</thead>[m
[32m+[m			[32m{% for user in users %}[m
[32m+[m			[32m<tr>[m
[32m+[m				[32m<td>{{user.firs_name}}</td>[m
[32m+[m				[32m<td>{{user.last_name}}</td>[m
[32m+[m				[32m<td>{{user.email}}</td>[m
[32m+[m			[32m</tr>[m
[32m+[m			[32m{% endfor %}[m
[32m+[m[41m			[m
[32m+[m			[32m{% else %}[m
[32m+[m				[32m<p>There is no user</p>[m
[32m+[m			[32m{% endif%}[m
[32m+[m		[32m</table>[m
[32m+[m
[32m+[m	[32m</div>[m
[32m+[m[32m</div>[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
\ No newline at end of file[m
[1mdiff --git a/appTwo/tests.py b/appTwo/tests.py[m
[1mnew file mode 100644[m
[1mindex 0000000..7ce503c[m
[1m--- /dev/null[m
[1m+++ b/appTwo/tests.py[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32mfrom django.test import TestCase[m
[32m+[m
[32m+[m[32m# Create your tests here.[m
[1mdiff --git a/appTwo/urls.py b/appTwo/urls.py[m
[1mnew file mode 100644[m
[1mindex 0000000..aa6e720[m
[1m--- /dev/null[m
[1m+++ b/appTwo/urls.py[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mfrom django.urls import path[m
[32m+[m[32mfrom appTwo import views[m
[32m+[m
[32m+[m[32murlpatterns = [[m
[32m+[m[32m    path('', views.users, name='user'),[m
[32m+[m[32m][m
[1mdiff --git a/appTwo/views.py b/appTwo/views.py[m
[1mnew file mode 100644[m
[1mindex 0000000..d344a6a[m
[1m--- /dev/null[m
[1m+++ b/appTwo/views.py[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32mfrom django.shortcuts import render[m
[32m+[m[32mfrom django.http import HttpResponse[m
[32m+[m[32mfrom appTwo.models import User[m
[32m+[m[32m# Create your views here.[m
[32m+[m
[32m+[m
[32m+[m[32mdef index(request):[m
[32m+[m[32m    return render(request, 'appTwo/index.html')[m
[32m+[m
[32m+[m
[32m+[m[32mdef users(request):[m
[32m+[m[32m    user_list = User.objects.order_by('firs_name')[m
[32m+[m[32m    user_dict = {'users': user_list}[m
[32m+[m[32m    return render(request, 'appTwo/user.html', context=user_dict)[m
[1mdiff --git a/db.sqlite3 b/db.sqlite3[m
[1mnew file mode 100644[m
[1mindex 0000000..2fd87b7[m
Binary files /dev/null and b/db.sqlite3 differ
[1mdiff --git a/manage.py b/manage.py[m
[1mnew file mode 100755[m
[1mindex 0000000..d3a74e0[m
[1m--- /dev/null[m
[1m+++ b/manage.py[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32m#!/usr/bin/env python[m
[32m+[m[32m"""Django's command-line utility for administrative tasks."""[m
[32m+[m[32mimport os[m
[32m+[m[32mimport sys[m
[32m+[m
[32m+[m
[32m+[m[32mdef main():[m
[32m+[m[32m    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'second_project.settings')[m
[32m+[m[32m    try:[m
[32m+[m[32m        from django.core.management import execute_from_command_line[m
[32m+[m[32m    except ImportError as exc:[m
[32m+[m[32m        raise ImportError([m
[32m+[m[32m            "Couldn't import Django. Are you sure it's installed and "[m
[32m+[m[32m            "available on your PYTHONPATH environment variable? Did you "[m
[32m+[m[32m            "forget to activate a virtual environment?"[m
[32m+[m[32m        ) from exc[m
[32m+[m[32m    execute_from_command_line(sys.argv)[m
[32m+[m
[32m+[m
[32m+[m[32mif __name__ == '__main__':[m
[32m+[m[32m    main()[m
[1mdiff --git a/populate_users.py b/populate_users.py[m
[1mnew file mode 100644[m
[1mindex 0000000..63091b3[m
[1m--- /dev/null[m
[1m+++ b/populate_users.py[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32mimport os[m[41m [m
[32m+[m[32mos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'second_project.settings')[m
[32m+[m
[32m+[m[32mimport django[m
[32m+[m[32mdjango.setup()[m
[32m+[m
[32m+[m[32mfrom appTwo.models import User[m
[32m+[m[32mfrom faker import Faker[m[41m [m
[32m+[m[32mfakegen = Faker()[m
[32m+[m
[32m+[m[32mdef populate(N=5):[m
[32m+[m	[32mfor entre in range(N):[m
[32m+[m		[32mfake_name = fakegen.name().split()[m
[32m+[m		[32mfake_first_name = fake_name[0][m
[32m+[m		[32mfake_last_name = fake_name[1][m
[32m+[m		[32mfake_email = fakegen.email()[m
[32m+[m
[32m+[m		[32muser = User.objects.get_or_create(firs_name = fake_first_name, last_name = fake_last_name, email = fake_email)[0][m
[32m+[m
[32m+[m[32mif __name__ == '__main__':[m
[32m+[m	[32mprint("POPULATING DATABASES")[m
[32m+[m	[32mpopulate(20)[m
[32m+[m	[32mprint("COMPLETE")[m
\ No newline at end of file[m
[1mdiff --git a/second_project/__init__.py b/second_project/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/second_project/__init__.pyc b/second_project/__init__.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..725933e[m
Binary files /dev/null and b/second_project/__init__.pyc differ
[1mdiff --git a/second_project/__pycache__/__init__.cpython-37.pyc b/second_project/__pycache__/__init__.cpython-37.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..0f58161[m
Binary files /dev/null and b/second_project/__pycache__/__init__.cpython-37.pyc differ
[1mdiff --git a/second_project/__pycache__/settings.cpython-37.pyc b/second_project/__pycache__/settings.cpython-37.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..7e8ca40[m
Binary files /dev/null and b/second_project/__pycache__/settings.cpython-37.pyc differ
[1mdiff --git a/second_project/__pycache__/urls.cpython-37.pyc b/second_project/__pycache__/urls.cpython-37.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..ef1a431[m
Binary files /dev/null and b/second_project/__pycache__/urls.cpython-37.pyc differ
[1mdiff --git a/second_project/__pycache__/wsgi.cpython-37.pyc b/second_project/__pycache__/wsgi.cpython-37.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..33798c0[m
Binary files /dev/null and b/second_project/__pycache__/wsgi.cpython-37.pyc differ
[1mdiff --git a/second_project/asgi.py b/second_project/asgi.py[m
[1mnew file mode 100644[m
[1mindex 0000000..c5cb178[m
[1m--- /dev/null[m
[1m+++ b/second_project/asgi.py[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m"""[m
[32m+[m[32mASGI config for second_project project.[m
[32m+[m
[32m+[m[32mIt exposes the ASGI callable as a module-level variable named ``application``.[m
[32m+[m
[32m+[m[32mFor more information on this file, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/3.0/howto/deployment/asgi/[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32mimport os[m
[32m+[m
[32m+[m[32mfrom django.core.asgi import get_asgi_application[m
[32m+[m
[32m+[m[32mos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'second_project.settings')[m
[32m+[m
[32m+[m[32mapplication = get_asgi_application()[m
[1mdiff --git a/second_project/settings.py b/second_project/settings.py[m
[1mnew file mode 100644[m
[1mindex 0000000..c5a0244[m
[1m--- /dev/null[m
[1m+++ b/second_project/settings.py[m
[36m@@ -0,0 +1,123 @@[m
[32m+[m[32m"""[m
[32m+[m[32mDjango settings for second_project project.[m
[32m+[m
[32m+[m[32mGenerated by 'django-admin startproject' using Django 3.0.5.[m
[32m+[m
[32m+[m[32mFor more information on this file, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/3.0/topics/settings/[m
[32m+[m
[32m+[m[32mFor the full list of settings and their values, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/3.0/ref/settings/[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32mimport os[m
[32m+[m
[32m+[m[32m# Build paths inside the project like this: os.path.join(BASE_DIR, ...)[m
[32m+[m[32mBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))[m
[32m+[m[32mTEMPLATE_DIR = os.path.join(BASE_DIR, 'templates')[m
[32m+[m[32mSTATIC_DIR = os.path.join(BASE_DIR, 'static')[m
[32m+[m
[32m+[m[32m# Quick-start development settings - unsuitable for production[m
[32m+[m[32m# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/[m
[32m+[m
[32m+[m[32m# SECURITY WARNING: keep the secret key used in production secret![m
[32m+[m[32mSECRET_KEY = 'mh8ptd744*f@n#o3cs*d2amql*r$)zpa842@h5m@-+^^l_k0tm'[m
[32m+[m
[32m+[m[32m# SECURITY WARNING: don't run with debug turned on in production![m
[32m+[m[32mDEBUG = True[m
[32m+[m
[32m+[m[32mALLOWED_HOSTS = [][m
[32m+[m
[32m+[m
[32m+[m[32m# Application definition[m
[32m+[m
[32m+[m[32mINSTALLED_APPS = [[m
[32m+[m[32m    'django.contrib.admin',[m
[32m+[m[32m    'django.contrib.auth',[m
[32m+[m[32m    'django.contrib.contenttypes',[m
[32m+[m[32m    'django.contrib.sessions',[m
[32m+[m[32m    'django.contrib.messages',[m
[32m+[m[32m    'django.contrib.staticfiles',[m
[32m+[m[32m    'appTwo',[m
[32m+[m[32m][m
[32m+[m
[32m+[m[32mMIDDLEWARE = [[m
[32m+[m[32m    'django.middleware.security.SecurityMiddleware',[m
[32m+[m[32m    'django.contrib.sessions.middleware.SessionMiddleware',[m
[32m+[m[32m    'django.middleware.common.CommonMiddleware',[m
[32m+[m[32m    'django.middleware.csrf.CsrfViewMiddleware',[m
[32m+[m[32m    'django.contrib.auth.middleware.AuthenticationMiddleware',[m
[32m+[m[32m    'django.contrib.messages.middleware.MessageMiddleware',[m
[32m+[m[32m    'django.middleware.clickjacking.XFrameOptionsMiddleware',[m
[32m+[m[32m][m
[32m+[m
[32m+[m[32mROOT_URLCONF = 'second_project.urls'[m
[32m+[m
[32m+[m[32mTEMPLATES = [[m
[32m+[m[32m    {[m
[32m+[m[32m        'BACKEND': 'django.template.backends.django.DjangoTemplates',[m
[32m+[m[32m        'DIRS': [TEMPLATE_DIR],[m
[32m+[m[32m        'APP_DIRS': True,[m
[32m+[m[32m        'OPTIONS': {[m
[32m+[m[32m            'context_processors': [[m
[32m+[m[32m                'django.template.context_processors.debug',[m
[32m+[m[32m                'django.template.context_processors.request',[m
[32m+[m[32m                'django.contrib.auth.context_processors.auth',[m
[32m+[m[32m                'django.contrib.messages.context_processors.messages',[m
[32m+[m[32m            ],[m
[32m+[m[32m        },[m
[32m+[m[32m    },[m
[32m+[m[32m][m
[32m+[m
[32m+[m[32mWSGI_APPLICATION = 'second_project.wsgi.application'[m
[32m+[m
[32m+[m
[32m+[m[32m# Database[m
[32m+[m[32m# https://docs.djangoproject.com/en/3.0/ref/settings/#databases[m
[32m+[m
[32m+[m[32mDATABASES = {[m
[32m+[m[32m    'default': {[m
[32m+[m[32m        'ENGINE': 'django.db.backends.sqlite3',[m
[32m+[m[32m        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32m# Password validation[m
[32m+[m[32m# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators[m
[32m+[m
[32m+[m[32mAUTH_PASSWORD_VALIDATORS = [[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m][m
[32m+[m
[32m+[m
[32m+[m[32m# Internationalization[m
[32m+[m[32m# https://docs.djangoproject.com/en/3.0/topics/i18n/[m
[32m+[m
[32m+[m[32mLANGUAGE_CODE = 'en-us'[m
[32m+[m
[32m+[m[32mTIME_ZONE = 'UTC'[m
[32m+[m
[32m+[m[32mUSE_I18N = True[m
[32m+[m
[32m+[m[32mUSE_L10N = True[m
[32m+[m
[32m+[m[32mUSE_TZ = True[m
[32m+[m
[32m+[m
[32m+[m[32m# Static files (CSS, JavaScript, Images)[m
[32m+[m[32m# https://docs.djangoproject.com/en/3.0/howto/static-files/[m
[32m+[m
[32m+[m[32mSTATIC_URL = '/static/'[m
[32m+[m[32mSTATICFILES_DIR = [STATIC_DIR][m
[1mdiff --git a/second_project/settings.pyc b/second_project/settings.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..52b7b0f[m
Binary files /dev/null and b/second_project/settings.pyc differ
[1mdiff --git a/second_project/urls.py b/second_project/urls.py[m
[1mnew file mode 100644[m
[1mindex 0000000..0b0fbaa[m
[1m--- /dev/null[m
[1m+++ b/second_project/urls.py[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32m"""second_project URL Configuration[m
[32m+[m
[32m+[m[32mThe `urlpatterns` list routes URLs to views. For more information please see:[m
[32m+[m[32m    https://docs.djangoproject.com/en/3.0/topics/http/urls/[m
[32m+[m[32mExamples:[m
[32m+[m[32mFunction views[m
[32m+[m[32m    1. Add an import:  from my_app import views[m
[32m+[m[32m    2. Add a URL to urlpatterns:  path('', views.home, name='home')[m
[32m+[m[32mClass-based views[m
[32m+[m[32m    1. Add an import:  from other_app.views import Home[m
[32m+[m[32m    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')[m
[32m+[m[32mIncluding another URLconf[m
[32m+[m[32m    1. Import the include() function: from django.urls import include, path[m
[32m+[m[32m    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))[m
[32m+[m[32m"""[m
[32m+[m[32mfrom django.contrib import admin[m
[32m+[m[32mfrom django.urls import path[m
[32m+[m[32mfrom django.conf.urls import include[m
[32m+[m[32mfrom appTwo import views[m
[32m+[m
[32m+[m[32murlpatterns = [[m
[32m+[m	[32mpath('', views.index,name='index'),[m
[32m+[m	[32mpath('users/',include('appTwo.urls')),[m
[32m+[m[32m    path('admin/', admin.site.urls),[m
[32m+[m[32m][m
[1mdiff --git a/second_project/wsgi.py b/second_project/wsgi.py[m
[1mnew file mode 100644[m
[1mindex 0000000..5a7a3df[m
[1m--- /dev/null[m
[1m+++ b/second_project/wsgi.py[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m"""[m
[32m+[m[32mWSGI config for second_project project.[m
[32m+[m
[32m+[m[32mIt exposes the WSGI callable as a module-level variable named ``application``.[m
[32m+[m
[32m+[m[32mFor more information on this file, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/3.0/howto/deployment/wsgi/[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32mimport os[m
[32m+[m
[32m+[m[32mfrom django.core.wsgi import get_wsgi_application[m
[32m+[m
[32m+[m[32mos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'second_project.settings')[m
[32m+[m
[32m+[m[32mapplication = get_wsgi_application()[m
